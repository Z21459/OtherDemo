#include <iostream>
#include <vector>
#include <string>
#include <queue>
#include <stack>
#include <cstdio>

using namespace std;

//面向对象：按照人们对客观世界的系统思维方式，采用基于对象的概念构建模型，模拟客观世界分析、设计、实现软件方法。
//包括：类(相似内部状态和运动规律的实体集合) 对象(现实世界中各种各样的实体) 消息(对象之间相互阿灵犀和相互作用)

//struct 和class区别：c语言的struct(只定义变量，不定义函数)和c++的class   c++的struct和class(成员访问权限 前者是public后者是private，class还可以表示模板类型)

//构造函数不带参数的时候 写成A a；带参数写成A a()

//构造函数初始化列表  初始化顺序与变量声明的顺序一致，而不是按照出现的初始化列表中的顺序

//全局对象 相较于静态数据成员：静态可以隐藏信息，静态不存在名字冲突。

//空类默认有：默认构造和复制函数，析构函数，赋值函数，取值函数

//构造可以重载   析构不可以重载

//构造函数互相调用--不会出现死循环  出现栈溢出

//虚析构函数：析构函数是对象不使用时被释放，虚函数实现多态。避免内存泄漏---如果基类时虚析构，先执行子类析构 再执行基类析构


//重载和覆写：重载子类改写父类的方法(编译阶段，不属于面向对象)，覆写是同一个函数不同版本之间参数不同(只有虚函数和抽象方法才能够覆写--运行阶段)

int main6() {



	system("pause");
	return 0;
}