#include <iostream>
#include <cstdio>
#include <string.h>
using namespace std;

//c++继承和多态
//继承机制使得派生类能够获得基类的成员数据和方法，只需要在派生类中增加基类没有的成员
//多态：建立在继承基础上，动态绑定

//1 继承三种关系  public protected private

//多态、封装、继承是面向对象的三大特征。
//编译时多态--利用重载实现，对于非虚成员来说，系统在编译时，根据传递参数、返回类型来决定如何操作
//运行时多态-利用虚成员实现

//16 抽象基类和纯虚函数
//纯虚函数是在基类中没有定义的，必需在子类中加以实现，如果基类中含有一个或多个纯虚函数，就是抽象基类
//引入其方便使用多态特性，抽象基类不能实例化，定义的纯虚函数相当于借口

//17 虚函数和纯虚函数
//类中声明虚函数，这个函数是实现，哪怕空实现，能让其在子类中可以被覆盖，达到动态绑定，纯虚函数是接口
//虚函数在子类中可以不重载，但纯虚函数必需在子类中实现
//带纯虚函数的类叫虚基类，不能直接生成对象，只有被继承，且重写后才能使用，该类叫抽象类

//20 COM即组件对象模型，它定义了一种二进制标准，使得任何编程语言存取它所编写的模块

//24 DLL HELL 主要是动态链接库版本冲突的问题，一般情况DLL新版本会覆盖旧版本，
//那么原来使用旧版本的DLL的应用程序就不能继续正常工作了


int main7(int argc, char *argv[]) {


	system("pause");
	return 0;
}